/* Generated by Yosys 0.9 (git sha1 1979e0b1, i686-w64-mingw32.static-g++ 5.5.0 -Os) */

(* src = "mux_memoria2x1_4bitsconductual.v:4" *)
module mux_memoria2x1_4bitsconductual(clk, reset_L, selector, valid_input, data_in0_4b, data_in1_4b, valid_output, data_out2x1_conductual_4b);
  (* src = "mux_memoria2x1_4bitsconductual.v:5" *)
  input clk;
  (* src = "mux_memoria2x1_4bitsconductual.v:9" *)
  input [3:0] data_in0_4b;
  (* src = "mux_memoria2x1_4bitsconductual.v:10" *)
  input [3:0] data_in1_4b;
  (* src = "mux_memoria2x1_4bitsconductual.v:12" *)
  output [3:0] data_out2x1_conductual_4b;
  (* src = "mux_memoria2x1_4bitsconductual.v:16" *)
  wire [3:0] data_out_temp;
  (* src = "mux_memoria2x1_4bitsconductual.v:6" *)
  input reset_L;
  (* src = "mux_memoria2x1_4bitsconductual.v:7" *)
  input selector;
  (* src = "mux_memoria2x1_4bitsconductual.v:22" *)
  (* unused_bits = "0" *)
  wire temporal_valid;
  (* src = "mux_memoria2x1_4bitsconductual.v:8" *)
  input valid_input;
  (* src = "mux_memoria2x1_4bitsconductual.v:11" *)
  output valid_output;
  (* src = "mux_memoria2x1_4bitsconductual.v:17" *)
  wire valid_temp;
  (* module_not_derived = 32'd1 *)
  (* src = "mux_memoria2x1_4bitsconductual.v:21" *)
  mux_memoria2x1_conductual_inst muxEntrada10 (
    .clk(clk),
    .data_in0(data_in0_4b[1:0]),
    .data_in1(data_in1_4b[1:0]),
    .data_out2x1_conductual(data_out_temp[1:0]),
    .reset_L(reset_L),
    .selector(selector),
    .valid_input(valid_input),
    .valid_output(temporal_valid)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "mux_memoria2x1_4bitsconductual.v:24" *)
  mux_memoria2x1_conductual_inst muxEntrada32 (
    .clk(clk),
    .data_in0(data_in0_4b[3:2]),
    .data_in1(data_in1_4b[3:2]),
    .data_out2x1_conductual(data_out_temp[3:2]),
    .reset_L(reset_L),
    .selector(selector),
    .valid_input(valid_input),
    .valid_output(valid_temp)
  );
  assign data_out2x1_conductual_4b = data_out_temp;
  assign valid_output = valid_temp;
endmodule

(* src = "mux_memoria2x1_conductual_inst.v:3" *)
module mux_memoria2x1_conductual_inst(clk, reset_L, selector, valid_input, data_in0, data_in1, valid_output, data_out2x1_conductual);
  (* src = "mux_memoria2x1_conductual_inst.v:29" *)
  wire [1:0] _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  (* src = "mux_memoria2x1_conductual_inst.v:4" *)
  input clk;
  (* src = "mux_memoria2x1_conductual_inst.v:8" *)
  input [1:0] data_in0;
  (* src = "mux_memoria2x1_conductual_inst.v:9" *)
  input [1:0] data_in1;
  (* src = "mux_memoria2x1_conductual_inst.v:11" *)
  output [1:0] data_out2x1_conductual;
  (* src = "mux_memoria2x1_conductual_inst.v:5" *)
  input reset_L;
  (* src = "mux_memoria2x1_conductual_inst.v:6" *)
  input selector;
  (* init = 2'h0 *)
  (* src = "mux_memoria2x1_conductual_inst.v:14" *)
  (* unused_bits = "0 1" *)
  wire [1:0] temporal_output;
  (* src = "mux_memoria2x1_conductual_inst.v:15" *)
  wire temporal_valid;
  (* src = "mux_memoria2x1_conductual_inst.v:7" *)
  input valid_input;
  (* src = "mux_memoria2x1_conductual_inst.v:10" *)
  output valid_output;
  NOT _15_ (
    .A(valid_input),
    .Y(_01_)
  );
  NOT _16_ (
    .A(data_in1[0]),
    .Y(_02_)
  );
  NOT _17_ (
    .A(data_in1[1]),
    .Y(_03_)
  );
  NAND _18_ (
    .A(data_out2x1_conductual[0]),
    .B(_01_),
    .Y(_04_)
  );
  NAND _19_ (
    .A(_02_),
    .B(selector),
    .Y(_05_)
  );
  NOR _20_ (
    .A(data_in0[0]),
    .B(selector),
    .Y(_06_)
  );
  NAND _21_ (
    .A(reset_L),
    .B(valid_input),
    .Y(_07_)
  );
  NOR _22_ (
    .A(_06_),
    .B(_07_),
    .Y(_08_)
  );
  NAND _23_ (
    .A(_05_),
    .B(_08_),
    .Y(_09_)
  );
  NAND _24_ (
    .A(_04_),
    .B(_09_),
    .Y(_00_[0])
  );
  NAND _25_ (
    .A(_01_),
    .B(data_out2x1_conductual[1]),
    .Y(_10_)
  );
  NAND _26_ (
    .A(selector),
    .B(_03_),
    .Y(_11_)
  );
  NOR _27_ (
    .A(selector),
    .B(data_in0[1]),
    .Y(_12_)
  );
  NOR _28_ (
    .A(_07_),
    .B(_12_),
    .Y(_13_)
  );
  NAND _29_ (
    .A(_11_),
    .B(_13_),
    .Y(_14_)
  );
  NAND _30_ (
    .A(_10_),
    .B(_14_),
    .Y(_00_[1])
  );
  (* src = "mux_memoria2x1_conductual_inst.v:29" *)
  DFF _31_ (
    .C(clk),
    .D(valid_input),
    .Q(valid_output)
  );
  (* src = "mux_memoria2x1_conductual_inst.v:29" *)
  DFF _32_ (
    .C(clk),
    .D(_00_[0]),
    .Q(data_out2x1_conductual[0])
  );
  (* src = "mux_memoria2x1_conductual_inst.v:29" *)
  DFF _33_ (
    .C(clk),
    .D(_00_[1]),
    .Q(data_out2x1_conductual[1])
  );
  assign temporal_valid = valid_input;
endmodule

(* top =  1  *)
(* src = "mux_memoria4x1_4bitsestructural.v:3" *)
module mux_memoria4x1_4bitsestructural(clk, reset_L, selector4x1, valid_input, data_in0_4x1_4b, data_in1_4x1_4b, data_in2_4x1_4b, data_in3_4x1_4b, valid_output, data_out4x1_estructural_4b);
  (* src = "mux_memoria4x1_4bitsestructural.v:4" *)
  input clk;
  (* src = "mux_memoria4x1_4bitsestructural.v:8" *)
  input [3:0] data_in0_4x1_4b;
  (* src = "mux_memoria4x1_4bitsestructural.v:9" *)
  input [3:0] data_in1_4x1_4b;
  (* src = "mux_memoria4x1_4bitsestructural.v:10" *)
  input [3:0] data_in2_4x1_4b;
  (* src = "mux_memoria4x1_4bitsestructural.v:11" *)
  input [3:0] data_in3_4x1_4b;
  (* src = "mux_memoria4x1_4bitsestructural.v:13" *)
  output [3:0] data_out4x1_estructural_4b;
  (* src = "mux_memoria4x1_4bitsestructural.v:17" *)
  wire [3:0] data_out_S0;
  (* src = "mux_memoria4x1_4bitsestructural.v:17" *)
  wire [3:0] data_out_S1;
  (* src = "mux_memoria4x1_4bitsestructural.v:17" *)
  wire [3:0] data_out_temp;
  (* src = "mux_memoria4x1_4bitsestructural.v:5" *)
  input reset_L;
  (* src = "mux_memoria4x1_4bitsestructural.v:6" *)
  input [1:0] selector4x1;
  (* src = "mux_memoria4x1_4bitsestructural.v:25" *)
  (* unused_bits = "0" *)
  wire temporal_valid;
  (* src = "mux_memoria4x1_4bitsestructural.v:28" *)
  (* unused_bits = "0" *)
  wire temporal_valid2;
  (* src = "mux_memoria4x1_4bitsestructural.v:7" *)
  input valid_input;
  (* src = "mux_memoria4x1_4bitsestructural.v:12" *)
  output valid_output;
  (* src = "mux_memoria4x1_4bitsestructural.v:18" *)
  wire valid_temp;
  (* module_not_derived = 32'd1 *)
  (* src = "mux_memoria4x1_4bitsestructural.v:24" *)
  mux_memoria2x1_4bitsconductual muxEntrada01 (
    .clk(clk),
    .data_in0_4b(data_in0_4x1_4b),
    .data_in1_4b(data_in1_4x1_4b),
    .data_out2x1_conductual_4b(data_out_S0),
    .reset_L(reset_L),
    .selector(selector4x1[0]),
    .valid_input(valid_input),
    .valid_output(temporal_valid)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "mux_memoria4x1_4bitsestructural.v:27" *)
  mux_memoria2x1_4bitsconductual muxEntrada23 (
    .clk(clk),
    .data_in0_4b(data_in2_4x1_4b),
    .data_in1_4b(data_in3_4x1_4b),
    .data_out2x1_conductual_4b(data_out_S1),
    .reset_L(reset_L),
    .selector(selector4x1[0]),
    .valid_input(valid_input),
    .valid_output(temporal_valid2)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "mux_memoria4x1_4bitsestructural.v:30" *)
  mux_memoria2x1_4bitsconductual muxEntradaFinal (
    .clk(clk),
    .data_in0_4b(data_out_S0),
    .data_in1_4b(data_out_S1),
    .data_out2x1_conductual_4b(data_out_temp),
    .reset_L(reset_L),
    .selector(selector4x1[1]),
    .valid_input(valid_input),
    .valid_output(valid_temp)
  );
  assign data_out4x1_estructural_4b = data_out_temp;
  assign valid_output = valid_temp;
endmodule
